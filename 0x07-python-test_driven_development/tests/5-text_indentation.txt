====================================================
Testing function that prints a text with 2 new lines
====================================================

Module defines a text indentation function

Usage
=====

::
	>>> text_indentation = __import__('5-text_indentation').text_indentation
	>>> text_indentation("Hello?")
	Hello?
	<BLANKLINE>

::
	>>> text_indentation("   Hi there.")
	Hi there.
	<BLANKLINE>

::
	>>> text_indentation("             ")


::
	>>> text_indentation("Hello.    ")
	Hello.
	<BLANKLINE>

::
	>>> text_indentation("      Kinda getting.       Really fun.     ")
	Kinda getting.
	<BLANKLINE>
	Really fun.
	<BLANKLINE>

::
	>>> text_indentation("No ending period, this is bad grammar")
	No ending period, this is bad grammar

::
	>>> text_indentation("Let's print a new line! Here goes:\nPrinted.")
	Let's print a new line! Here goes:
	<BLANKLINE>
	<BLANKLINE>
	Printed.
	<BLANKLINE>

::
	>>> text_indentation("\n\n\n We just printed three new lines.")
	<BLANKLINE>
	<BLANKLINE>
	<BLANKLINE>
	We just printed three new lines.
	<BLANKLINE>

::
	>>> text_indentation("A sneaky\n new line.")
	A sneaky
	new line.
	<BLANKLINE>

Invalid text
============

::
	>>> text_indentation(7)
	Traceback (most recent call last):
	TypeError: text must be a string

::
	>>> text_indentation({"one": 1, "two": 2})
	Traceback (most recent call last):
	TypeError: text must be a string

::
	>>> text_indentation(None)
	Traceback (most recent call last):
	TypeError: text must be a string
