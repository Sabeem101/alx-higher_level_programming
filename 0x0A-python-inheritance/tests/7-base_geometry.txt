=================================================
Testing a class method that validates an integer.
=================================================

Importing function
==================

	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
	>>> bg = BaseGeometry()

	>>> bg.integer_validator("integer", 1)

	>>> bg.integer_validator("integer", 0)
	Traceback (most recent call last):
	...
	ValueError: integer must be greater than 0

	>>> bg.integer_validator("integer", -5)
	Traceback (most recent call last):
	...
	ValueError: integer must be greater than 0

	>>> bg.integer_validator("bool", True)
	Traceback (most recent call last):
	...
	TypeError: bool must be an integer

	>>> bg.integer_validator("float", 2.41)
	Traceback (most recent call last):
	...
	TypeError: float must be an integer

	>>> bg.integer_validator("complex", complex(1, 1))
	Traceback (most recent call last):
	...
	TypeError: complex must be an integer

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("integer")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator("integer", 1, 2)
	Traceback (most recent call last):
	...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given
